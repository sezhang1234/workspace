services:
  # Frontend Service
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - VITE_API_BASE_URL=http://localhost:8000/api
    depends_on:
      - backend
    networks:
      - jiuwen-network
    restart: unless-stopped

  # Backend Service
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - DATABASE_URL=postgresql://jiuwen_user:jiuwen_pass@postgres:5432/jiuwen_studio
      - SECRET_KEY=your-secret-key-change-in-production
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - jiuwen-network
    restart: unless-stopped
    volumes:
      - ../backend:/app
      - /app/__pycache__

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=jiuwen_studio
      - POSTGRES_USER=jiuwen_user
      - POSTGRES_PASSWORD=jiuwen_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - jiuwen-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - jiuwen-network
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - jiuwen-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  jiuwen-network:
    driver: bridge